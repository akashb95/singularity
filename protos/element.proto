// Per business logic, element = lamp

syntax = "proto3";

package lighting.element;

import "location.proto";
import "asset.proto";

service Element {
    rpc Get (Request) returns (Reply);

    rpc List (ListRequest) returns (stream ListReply);

    rpc SearchByLocation (lighting.location.FilterByLocationRequest) returns (stream Reply);

    rpc Create (CreateRequest) returns (ListReply);

    rpc Update (Reply) returns (Reply);

    rpc Delete (Request) returns (Reply);

    rpc Prune (Request) returns (Reply);

    rpc AddToAsset (Reply) returns (Reply);

}

message ListRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message ListReply {
    repeated Reply elements = 1;
}

message Request {
    int32 id = 1;
}

message Reply {
    // unique identifier within system
    int32 id = 1;

    // last known status of element
    ActivityStatus status = 2;

    // should be something helpful
    string description = 3;

    // details of the Asset that this element is connected to
    oneof asset_oneof {
        lighting.asset.Reply asset = 4;
        int32 asset_id = 5;
    }

    // where is this element?
    oneof location_oneof {

        // if setting a location, leave this unset - default value is False
        bool no_location = 14;

        // if no_location is False, then read this location. Else, leave this alone.
        // Deals with edge case where there are elements at exactly (0, 0).
        lighting.location.Location location = 15;
    }
}

message CreateRequest {
    // List of Element details.
    repeated Reply elements = 1;
}

enum ActivityStatus {
    // this is the status that can be changed by the server only
    // a client CANNOT change the value to 0
    UNAVAILABLE = 0;

    ACTIVE = 1;
    INACTIVE = 2;
    DELETED = 15;
}
