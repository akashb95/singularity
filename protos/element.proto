// Per business logic, element = lamp

syntax = "proto3";

package lighting.element;

import "location.proto";
import "asset.proto";

service Element {
    rpc Get (Request) returns (Reply);

    rpc List (ListRequest) returns (stream ListReply);

    rpc SearchByLocation (lighting.location.FilterByLocationRequest) returns (stream Reply);

    // TODO #9: add RPCs to create and update elements. This is practically the 'asset import' functionality.
}

message ListRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message ListReply {
    repeated Reply elements = 1;
}

message Request {
    int32 id = 1;
}

message Reply {
    // unique identifier within system
    int32 id = 1;

    // last known status of element
    ActivityStatus status = 2;

    // should be something helpful
    string description = 3;

    // details of the Asset that this element is connected to
    lighting.asset.Reply asset = 4;

    // where is this element?
    lighting.location.Location location = 15;
}

enum ActivityStatus {
    UNAVAILABLE = 0;
    ACTIVE = 1;
    INACTIVE = 2;
    DELETED = 15;
}
