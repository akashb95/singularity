// The piece of hardware that all telecells connect to

syntax = "proto3";

package lighting.basestation;

import "location.proto";

service Basestation {

    rpc Get (Request) returns (Reply);

    rpc List (ListRequest) returns (stream ListReply);

    rpc SearchByLocation (lighting.location.FilterByLocationRequest) returns (stream Reply);

    rpc Create (Reply) returns (Reply);

    rpc Update (Reply) returns (Reply);

    rpc Delete (Request) returns (Reply);

    rpc Prune (Request) returns (Reply);
}
message Request {
    oneof unique_identifier {
        int32 id = 1;
        int32 uuid = 2;
    }
}

message Reply {
    // unique identifier within a particular system
    int32 id = 1;

    // unique identifier globally, across all systems
    int64 uuid = 2;

    // BS firmware version
    int32 version = 3;

    // activity status indicator
    ActivityStatus status = 4;

    // where is this BS?
    // where is this element?
    oneof location_oneof {

        // if setting a location, leave this unset - default value is False
        bool no_location = 14;

        // if no_location is False, then read this location. Else, leave this alone.
        // Deals with edge case where there are elements at exactly (0, 0).
        lighting.location.Location location = 15;
    }
}

message ListRequest {
    int32 limit = 1;
    int32 offset = 2;
}


message ListReply {
    repeated Reply basestations = 1;
}

enum ActivityStatus {
    UNAVAILABLE = 0;
    ACTIVE = 1;
    INACTIVE = 2;
    DELETED = 15;
}